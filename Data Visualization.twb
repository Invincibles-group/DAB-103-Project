<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFiltersHamburgerUI />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='IT_Survey_DataCleaned' inline='true' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='IT_Survey_DataCleaned' name='textscan.0udgpre0micf2s11cpk3t1q7svk4'>
            <connection class='textscan' directory='C:/Users/goran/Documents/DAB103' filename='IT_Survey_DataCleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0udgpre0micf2s11cpk3t1q7svk4' name='IT_Survey_DataCleaned.csv' table='[IT_Survey_DataCleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='integer' name='Year_of_Response' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='Position' ordinal='5' />
            <column datatype='integer' name='Years_of_Experience' ordinal='6' />
            <column datatype='string' name='Seniority level' ordinal='7' />
            <column datatype='string' name='Primary_Skillset' ordinal='8' />
            <column datatype='integer' name='Salary_Without_Incentives' ordinal='9' />
            <column datatype='integer' name='Annual_Incentives' ordinal='10' />
            <column datatype='real' name='Number of vacation days' ordinal='11' />
            <column datatype='string' name='Employment status' ordinal='12' />
            <column datatype='string' name='Contract_Duration' ordinal='13' />
            <column datatype='string' name='Communication Language' ordinal='14' />
            <column datatype='string' name='Company size' ordinal='15' />
            <column datatype='string' name='Company type' ordinal='16' />
            <column datatype='string' name='Unemployed_CovidOutbreak' ordinal='17' />
            <column datatype='integer' name='Total_Salary' ordinal='18' />
            <column datatype='string' name='Country' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0udgpre0micf2s11cpk3t1q7svk4' name='IT_Survey_DataCleaned.csv' table='[IT_Survey_DataCleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='index' ordinal='0' />
            <column datatype='integer' name='Year_of_Response' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='City' ordinal='4' />
            <column datatype='string' name='Position' ordinal='5' />
            <column datatype='integer' name='Years_of_Experience' ordinal='6' />
            <column datatype='string' name='Seniority level' ordinal='7' />
            <column datatype='string' name='Primary_Skillset' ordinal='8' />
            <column datatype='integer' name='Salary_Without_Incentives' ordinal='9' />
            <column datatype='integer' name='Annual_Incentives' ordinal='10' />
            <column datatype='real' name='Number of vacation days' ordinal='11' />
            <column datatype='string' name='Employment status' ordinal='12' />
            <column datatype='string' name='Contract_Duration' ordinal='13' />
            <column datatype='string' name='Communication Language' ordinal='14' />
            <column datatype='string' name='Company size' ordinal='15' />
            <column datatype='string' name='Company type' ordinal='16' />
            <column datatype='string' name='Unemployed_CovidOutbreak' ordinal='17' />
            <column datatype='integer' name='Total_Salary' ordinal='18' />
            <column datatype='string' name='Country' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_of_Response</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year_of_Response]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Year_of_Response</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years_of_Experience</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Years_of_Experience]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Years_of_Experience</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seniority level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Seniority level]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Seniority level</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary_Skillset</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary_Skillset]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Primary_Skillset</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary_Without_Incentives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Salary_Without_Incentives]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Salary_Without_Incentives</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_Incentives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual_Incentives]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Annual_Incentives</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of vacation days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of vacation days]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Number of vacation days</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Employment status]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Employment status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contract_Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contract_Duration]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Contract_Duration</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Communication Language</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Communication Language]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Communication Language</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company size]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Company size</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company type]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Company type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployed_CovidOutbreak</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unemployed_CovidOutbreak]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Unemployed_CovidOutbreak</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Salary]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Total_Salary</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[IT_Survey_DataCleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Annual Incentives' datatype='integer' name='[Annual_Incentives]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Contract Duration' datatype='string' name='[Contract_Duration]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column caption='Primary Skillset' datatype='string' name='[Primary_Skillset]' role='dimension' type='nominal' />
      <column caption='Salary Without Incentives' datatype='integer' name='[Salary_Without_Incentives]' role='measure' type='quantitative' />
      <column caption='Total Salary' datatype='integer' name='[Total_Salary]' role='measure' type='quantitative' />
      <column caption='Unemployed CovidOutbreak' datatype='string' name='[Unemployed_CovidOutbreak]' role='dimension' type='nominal' />
      <column caption='Year of Response' datatype='integer' name='[Year_of_Response]' role='dimension' type='quantitative' />
      <column caption='Years of Experience (bin)' datatype='integer' name='[Years of Experience (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Years_of_Experience]' peg='0' size='1' />
      </column>
      <column caption='Years of Experience' datatype='integer' name='[Years_of_Experience]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='IT_Survey_DataCleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      <column-instance column='[Primary_Skillset]' derivation='None' name='[none:Primary_Skillset:nk]' pivot='key' type='nominal' />
      <column-instance column='[Unemployed_CovidOutbreak]' derivation='None' name='[none:Unemployed_CovidOutbreak:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year_of_Response]' derivation='None' name='[none:Year_of_Response:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (City,Primary Skillset)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:City:nk]' />
          <groupfilter function='level-members' level='[none:Primary_Skillset:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Unemployed CovidOutbreak,Year of Response)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Unemployed_CovidOutbreak:nk]' />
          <groupfilter function='level-members' level='[none:Year_of_Response:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Primary_Skillset:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cobol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Go, PHP, SQL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Java, Javascript&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JavaScript/TypeScript&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Linux Kernel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;nothing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Python&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ruby&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spark, Pytorch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Typescript&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;-&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AWS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C++, C\#&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erlang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Java&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kotlin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Node.js&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PL/SQL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qlik&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Swift/Kotlin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Web&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;.Net&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azure, SAP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frontend: react, node.js&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Java Backend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JavaScript, TypeScript&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kubernetes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NodeJS/TS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PowerShell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;React / JavaScript&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sketch, Figma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Test Management&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Angular&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C/C++&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DevOps&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Google Cloud&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Java/C++&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Js&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;missing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pascal, VB.NET, C\#&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Python, cloud computing &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salesforce&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SQL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TypeScript, Kotlin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Android&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C, C++&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;consumer analysis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Go/Python&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Java, JS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JavScript&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Linux-Stack, Networking&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Objective-C&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Python (Django)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ruby on rails&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;typescript&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;.Net, Angular&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cisco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GCP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Java, .Net&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JavaScript/ES6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kubernetes, Terraform, GCP&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NodsJs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PS, Sketch, React, CSS3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;React JS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solidity&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tricentis Tosca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ASM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C++&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;embedded&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;iOS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JavaScript&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;K8S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NLP, Python&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;php, js, python, docker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Python/SQL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAS,SQL,Python&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swift, objective-c&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VB, RPA, Python&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;--&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aws Hadoop Postgre Typescript&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C++, Java, Embedded C&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FBD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;java&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JavaScript / typescript&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kotlin, Java&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nodejs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PM tools&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qlik BI Tool, SQL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scala / Python&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T-SQL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Web developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Apache Spark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C\#, .net core&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elixir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;java/scala/go/clouds/devops&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Js, TypeScript, Angular&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Network&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PHP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Python, Whole Apache Data Science Stack, AWS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SAP BW / ABAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SWIFT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UML&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ABAP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BI, DWH, ETL/ELT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clojure&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;go&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Java, angular, Aws&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JavaScript/Typescript&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kubrrnetes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pythin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;React.js / TypeScript&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Angular, React&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;c\#&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Django, Flask, Plotly Dash&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grails, Groovy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Java/Groovy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;js&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ML&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pegasystems platform&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;python, scala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SAP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SRE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TypeScript, React&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Angular, Typescript&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C\#&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DWH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hadoop&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Java/Kotlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JS, Java&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ml/Python&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Perl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Python, SQL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SAP / ABAP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Typescript, Web apps&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Apotheker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C\#/.NET&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Embedded&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;javascript&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;k8s&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;networking, linux, automation, cloud&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Php&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Python/NLP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swift, Objective-C&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unity&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Autonomous Driving&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;c++&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Embedded C++&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JAVA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Javascript&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kotlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Node&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PHP/MySQL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;QA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;scala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swift, Objective-C, iOS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VHDL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;android&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C, Matlab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ð¡\#&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;golang&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Java, Kotlin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;jenkins bash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Linux/UNIX, GIT, Virtualisation Platforms, *shell(s) scripts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Openstack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Python / JavaScript (React)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ruby on Rails&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sql&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Typescript / Angular&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Javascript / Typescript&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Agile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blockchain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Go&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Java, JavaScript&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Javascript/Typescript&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Linux&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Not Relevant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;python&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;React/Typescript&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;spark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TypeScript&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;.NET&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AWS, GCP, Python,K8s&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C++/c&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Figma&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Java / Scala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JavaScript / TypeScript&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kotlin/PHP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NodeJS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PostgreSQL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scala, React.js&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Terraform&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;yaml&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Angular, TypeScript&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C\# .NET&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ÐžÑ„Ð¼Ñ„&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hardware&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Java/Scala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Js, reactJS &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Multiple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;php&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Python, statistics, SQL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SAP ABAP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;swift&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TypeScript/Angular&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Android/Kotlin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;c/c++&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DC Management&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Golang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Java, terraform&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Microsoft, Vmware&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oracle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Python + SQL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rust&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;sql&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TypeScript, JavaScript&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;.net&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C++/C\#&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frontend&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Java &amp; Distributed Systems Stuff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Javascript, Angular&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuberenetes, Openstack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NodeJS, Typescript, AWS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Power BI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;React&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;several&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terraform, Kubernetes, AWS, GCP, Ansible, Puppet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yaml&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MÃ¼nchen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frankfurt&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#43719f'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Diverse&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Position:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;.NET Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;backend developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C\# Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Consultant Data Analytics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DB Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Digital Project Manager&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frontend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Game Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IT Administration&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Java Fullstack Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Localization producer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NLP Engineer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Product manager&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;QA Test Engineer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAP Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senior Consulter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senior Program Manager&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Site Reliability engineer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Softwareentwickler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SW Developer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tech recruiting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Application Engineer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Backend Developer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BI IT Consultant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cloud Architect&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Data Science Team Lead&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Devops&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ERP/BI Specialist&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Full-Stack Developer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Head of Product&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IT Spezialist&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lead Architect&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile Lead&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Platform Engineer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;qa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RPA developer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEM Manager&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senior Java developer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senior Software Testing Engineer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Software Engineer (Android)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Staff Technical Product Manager&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;team lead&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UX/UI designer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Automation QA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Business Intelligence Analyst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Computational Linguist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Database Administrator&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DevOps Engineer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Front End developer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fullstack developer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;iOS Developer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Java Developer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lead Java Developer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Network Administrator&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Principal Software Engineer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;QA Ingenieur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAP Business Analyst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senior automation qa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senior JS Enigneer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senior Web Deleloper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Software Engineer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Software Test Engineer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;support&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tech Lead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Web-Entwickler&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Frontend Developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Agile Coach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Banker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C++ developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Data Analyst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deep Learning Researcher (PHD)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Embedded Developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frontend Engineer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hardware Developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IT Engineer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Java Software Engineer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mainframe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PCB Designer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Programmierer/Consultant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Recruiter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scala\\Java&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senior Embedded Developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senior Ruby Developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Software developer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solutions architect&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;System Administrator (Windows)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Technical product manager&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;.net developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Backend developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C\#.net Developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crypto Developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DB developer/Data analyst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Director of Engineering&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FrontEnd dev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Go Developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IT Berater&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;java fullsteck developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Low level software developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Operations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Product Manager&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quality assurance&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sap developer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senior Data Engineer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senior QA Engineer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Software Architect&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solution Architect&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sysadmin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Technical account manager&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;.net c\# developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Automation Test Engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C/C++/Java developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Computational linguist&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Database Developer (DBA)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Devops Engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Front End Engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fullstack Engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;iOS developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Java developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lead Software Developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;network engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Producer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;QA Lead&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAP BW Senior Consultant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senior Automation Test Engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senior PHP Developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senior/Lead Developer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Software tester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Support Engineer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tech lead&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;webdev&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Android dev&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angular&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BI developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C++ sr. s/w dev&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Data Processing Specialist&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erlang Developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Head of Engineering&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IT Security&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Javascript Engineer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PHP Symfony&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Python developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Researcher/ Consumer Insights Analyst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Security Manager&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senior iOS Developer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senior Software Engineer (Data Engineer)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Software Engineer 2(Frontend)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SSE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TA Engineer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UX Designer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1Ð¡&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Architect&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Big Data Engineer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cloud Consulting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desktop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;devops&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Firmware Engineer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Full-Stack Web Developer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Head of Software Engineering&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Java &amp; JS Developer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lead developer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Modelling Specialist&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pm&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;QA Automation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ruby developer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senior .Net Developer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senior Java Developer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senior Sotfware Engineer (Typescript/Javascript)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Software Engineer (java)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Student, Software Developer, Data Engineer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Team lead PHP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VP Engineering&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Analyst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Android Developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BI Consultant SAP/ Data Engineer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C++ Software EnginÐµer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Data Developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Engineering Manager&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Full stack developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Head of Data Science&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IT Operations Manager&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Javascript Developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ML Engineer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PHP developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Python dev&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Research Scientist (AI)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Security engineer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senior Full-stack .Net Developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senior Software Engineer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Software engineer ( React/React-native )&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sr. JS Developer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Systems Administrator&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Test manager&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;.Net Developer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BA/PM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C\#&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Computer Vision Engineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DatabEngineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DevOps engineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front-end developer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fullstack engineer, Ð½Ñƒ Ð¸Ð»Ð¸ Software engineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;iOS Developwr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Java Developer junior&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lead Software Engineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Network engineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Product Analyst&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;QA Manager&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAP Consultant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senior Backend Developer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senior PHP developer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seniour software developer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Software Tester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;support engineer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tech Lead / Full-Stack&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;working student (QA)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Agile coach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beikoch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C++ Developer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Data analyst&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Designer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Embedded Software Engineer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frontent Developer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hardware Engineer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IT Infrastructure consultant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Java Team Lead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manager&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PHP Backend Developer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Project manager&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rentner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scrum Master&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senior Engineer (PHP)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senior Scrum Master (RTE)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Software Developer (Python Backend)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sr project manager&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;System Architect&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Technical project manager&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;agile master&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BI Analyst&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;C++ Engineer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Data architect&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Designer (UI, UX)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Engineer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Full stack&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Head of AI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IT Manager&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Java/JS Developer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manual QA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHP Developer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Project Manager&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reporting Engineer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SDE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senior Frontend Developer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senior Software Developer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Software Developer in Test&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sr. Database Entwickler (Oracle/Java)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;System Engineer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Test Automation Engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Analytics engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Android developer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BI Developer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;C++ Software Engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Data Engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Desktop/Unity3D Developer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Full stack engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Head of Development&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IT Project Manager&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Javascript Developer in Test&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mobile App Developer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PHP Full Stack Developer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Python Developer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Researcher&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Security Engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senior Fullstack&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senior Software engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Software engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SRE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Systems engineer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Testautomation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Application Consultant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BI Developer / Data Engineer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chief Research Officer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Data Science Manager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Engineering Team Lead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ERP Consultant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Full-stack developer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Head of IT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;It security&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Javascript software developer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mobile Developer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PHP Tech Lead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;QA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robotics Engineer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Security Researcher&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senior iOS developer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senior Software Ingenieur Java&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Staff Engineer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Team Lead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UX Researcher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Backend Developer &amp; Team Lead&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;c++&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CTO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DBA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DevOps&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DWH Developer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frontend developer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Golang developer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IT Consultant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Java script&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Machine Learning Engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Operations manager&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Product Security Engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quality engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scala developer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senior Data Scientist&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senior quant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Software Architekt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solution Engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;System Administrator&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;technical business analyst&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;.NET developer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BI Consultant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C\# dev&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Consultant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DataOps Team Lead&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DevOps Manager&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front-end engineer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fullstack JS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IT admin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Java Full-Stack Developer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Localization&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Network Engineer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Product Management Praktikant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;qa ta architect&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAP Consulter/ABAP Developer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senior Backend Engineer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senior PHP Magento developer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SharePoint Developer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Softwaredeveloper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SW Architect&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tech Leader&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;XR Developer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Architekt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business Analyst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cloud Engineer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Data Scientist&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DevOps (MS Stack)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freelance AI lead / advisor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fullstack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HiWi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Java dev&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lead Developer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MTS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QA automation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ruby Developer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senior .NET Engineer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senior javascript developer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senior SQL Server DBA/Developer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Software Engineer JavaSctipt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stuttgart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Team Manager&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Web Analytics Manager&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AI Management&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;android developer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;C++ Software Developer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Data Center Manager&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Designer (UI/UX)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Engineering manager&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Full Stack Developer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Head of BI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IT ÑÐ¿ÐµÑ†Ð¸Ð°Ð»Ð¸ÑÑ‚&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JavaScript Developer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marketing Analyst&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Php developer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Projectingenieur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Research Engineer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SDET&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senior Full stack developer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senior software engineer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Software Development Engineer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sr. Engineer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Systemadministrator&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Test Engineer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Account Managet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Backend Engineer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C++  developer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CTO (CEO, CFO)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Deep Learning Engineer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DWH expert&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Full-stack Developer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graphic Designer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;It Consulting&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Java Script developer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machine Learning Engineet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oracle Pl/SQL Developer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Professor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Quality Engineer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scala Developer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senior DevOps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senior Research Engineer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Software Developer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solutions Architect&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;System administrator&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Technical Lead&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;.net&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Associate IT Consultant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business Analyst/RE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cloud Platform Engineer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Data scientist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DevOps Architect&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Front End Developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fullstack Developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ios developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;java developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lead DevOps&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NAV Developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Presales Engineer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;QA Engineer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sales Engineer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senior Android Developer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senior Javascript Engineer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senior Tech recruiter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Software Sales&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Support&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Teamlead&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Web Developer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Unemployed_CovidOutbreak:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;yes but found a new one with better pay / perks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='IT_Survey_DataCleaned.csv' id='IT_Survey_DataCleaned.csv_2AA91C5E9E284BADB92447BCEC0C72DA'>
            <properties context=''>
              <relation connection='textscan.0udgpre0micf2s11cpk3t1q7svk4' name='IT_Survey_DataCleaned.csv' table='[IT_Survey_DataCleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='index' ordinal='0' />
                  <column datatype='integer' name='Year_of_Response' ordinal='1' />
                  <column datatype='integer' name='Age' ordinal='2' />
                  <column datatype='string' name='Gender' ordinal='3' />
                  <column datatype='string' name='City' ordinal='4' />
                  <column datatype='string' name='Position' ordinal='5' />
                  <column datatype='integer' name='Years_of_Experience' ordinal='6' />
                  <column datatype='string' name='Seniority level' ordinal='7' />
                  <column datatype='string' name='Primary_Skillset' ordinal='8' />
                  <column datatype='integer' name='Salary_Without_Incentives' ordinal='9' />
                  <column datatype='integer' name='Annual_Incentives' ordinal='10' />
                  <column datatype='real' name='Number of vacation days' ordinal='11' />
                  <column datatype='string' name='Employment status' ordinal='12' />
                  <column datatype='string' name='Contract_Duration' ordinal='13' />
                  <column datatype='string' name='Communication Language' ordinal='14' />
                  <column datatype='string' name='Company size' ordinal='15' />
                  <column datatype='string' name='Company type' ordinal='16' />
                  <column datatype='string' name='Unemployed_CovidOutbreak' ordinal='17' />
                  <column datatype='integer' name='Total_Salary' ordinal='18' />
                  <column datatype='string' name='Country' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_4A45BED098184009944C981D24A21F00]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gender' />
        <param name='target' value='Sheet 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='17'>Age Group with most Responses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Count' name='[cnt:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:Age:qk]' included-values='in-range'>
            <min>1</min>
            <max>255</max>
          </filter>
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:Age:qk]' field-type='quantitative' max='277' min='-5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#f28e2b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#b0b0b0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:Age:qk]</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Age (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[Age (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{70202E7B-1794-4B24-9241-0CAAE0BE4A37}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='17'>City with Higher Response in Germany to Survey</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]' direction='DESC' using='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:City:qk]' />
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='160' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e4e1ff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:City:qk]</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</cols>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{342BF274-DBA7-4A25-849E-7645F02A089D}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Salary based on Gender in Euros</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column caption='Total Salary' datatype='integer' name='[Total_Salary]' role='measure' type='quantitative' />
            <column-instance column='[Total_Salary]' derivation='Avg' name='[avg:Total_Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_Salary]' derivation='Sum' name='[pcto:sum:Total_Salary:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='860' />
            <format attr='cell-h' value='820' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#9ea8b0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Gender:nk]' />
              <wedge-size column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[pcto:sum:Total_Salary:qk]' />
              <lod column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{380AD002-2D3A-4879-8493-379F2D74F94A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='17'>Top 10 Skill Sets of Respondents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column caption='Primary Skillset' datatype='string' name='[Primary_Skillset]' role='dimension' type='nominal' />
            <column-instance column='[index]' derivation='Count' name='[cnt:index:qk]' pivot='key' type='quantitative' />
            <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[Primary_Skillset]' derivation='None' name='[none:Primary_Skillset:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([index])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Primary_Skillset:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Primary_Skillset:nk]' member='&quot;missing&quot;' />
                    <groupfilter function='member' level='[none:Primary_Skillset:nk]' member='&quot;Not Relevant&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffe6cf' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]' />
              <size column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:index:qk]' />
              <text column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]' />
              <text column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:index:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2EF5ED8A-DECE-468F-B5CE-645E35461E4E}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri,sans-serif' fontsize='17'>Top 5 Roles with High Salary in Euros</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Total Salary' datatype='integer' name='[Total_Salary]' role='measure' type='quantitative' />
            <column-instance column='[Total_Salary]' derivation='Avg' name='[avg:Total_Salary:qk]' pivot='key' type='quantitative' />
            <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([index])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Position:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]' direction='ASC' using='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]' />
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='140' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c8c7bc' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]' />
              <lod column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='885' />
                <format attr='maxwidth' value='885' />
                <format attr='minheight' value='700' />
                <format attr='maxheight' value='700' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]</cols>
      </table>
      <simple-id uuid='{BCA9B831-A090-4C5C-A85E-7FF50C080007}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>High Salary in Different Cities in Euros</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Total Salary' datatype='integer' name='[Total_Salary]' role='measure' type='quantitative' />
            <column-instance column='[Total_Salary]' derivation='Avg' name='[avg:Total_Salary:qk]' pivot='key' type='quantitative' />
            <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([index])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aachen&quot;' function='range' level='[none:City:nk]' to='&quot;Zurich&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([index])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Position:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]' direction='DESC' using='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]' />
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</column>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]' value='23' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]' value='66' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='60' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1041' />
                <format attr='maxwidth' value='1041' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk] / [federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk])</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]</cols>
      </table>
      <simple-id uuid='{AC16E91C-5C1D-41DD-8EFD-7579C18556B4}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of People Unemployed due to Covid Outbreak </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column caption='Unemployed CovidOutbreak' datatype='string' name='[Unemployed_CovidOutbreak]' role='dimension' type='nominal' />
            <column caption='Year of Response' datatype='integer' name='[Year_of_Response]' role='dimension' type='quantitative' />
            <column-instance column='[index]' derivation='Count' name='[cnt:index:qk]' pivot='key' type='quantitative' />
            <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[Unemployed_CovidOutbreak]' derivation='None' name='[none:Unemployed_CovidOutbreak:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_Response]' derivation='None' name='[none:Year_of_Response:ok]' pivot='key' type='ordinal' />
            <column-instance column='[index]' derivation='Count' name='[pcrk:cnt:index:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[index]' derivation='Count' name='[pcto:cnt:index:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[Exclusions (Unemployed CovidOutbreak,Year of Response)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Unemployed_CovidOutbreak:nk]' />
                <groupfilter function='level-members' level='[none:Year_of_Response:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Year_of_Response:ok]' member='2021' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Unemployed_CovidOutbreak:nk]' member='&quot;No&quot;' />
                    <groupfilter function='member' level='[none:Unemployed_CovidOutbreak:nk]' member='&quot;Yes&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Unemployed_CovidOutbreak:nk]' />
                  <hierarchy name='[none:Year_of_Response:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unemployed_CovidOutbreak:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Unemployed_CovidOutbreak:nk]' member='&quot;i didn&apos;t but will be looking for new one because of covid&quot;' />
                <groupfilter function='member' level='[none:Unemployed_CovidOutbreak:nk]' member='&quot;kurzarbeitzeit for 1.5 months&quot;' />
                <groupfilter function='member' level='[none:Unemployed_CovidOutbreak:nk]' member='&quot;Lost the job but for different reason&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unemployed_CovidOutbreak:nk]' />
              <groupfilter function='member' level='[none:Unemployed_CovidOutbreak:nk]' member='&quot;No, but there was a salary cut at 10\% for 3 months and then at 5\% for further 3 months&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]' direction='ASC' using='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:index:qk]' />
          <filter class='quantitative' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[pcrk:cnt:index:qk:1]' included-values='in-range'>
            <min>0.0</min>
            <max>1.0</max>
          </filter>
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]</column>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[pcrk:cnt:index:qk:1]</column>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[Exclusions (Unemployed CovidOutbreak,Year of Response)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='280' />
            <format attr='cell-h' value='60' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:index:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[pcrk:cnt:index:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[pcto:cnt:index:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1944' />
                <format attr='maxheight' value='1944' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[pcto:cnt:index:qk:1]</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Year_of_Response:ok]</cols>
      </table>
      <simple-id uuid='{FB99E26C-35BA-4A47-A596-D2746287CF49}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column caption='Total Salary' datatype='integer' name='[Total_Salary]' role='measure' type='quantitative' />
            <column-instance column='[index]' derivation='CountD' name='[ctd:index:qk]' pivot='key' type='quantitative' />
            <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[Total_Salary]' derivation='Sum' name='[sum:Total_Salary:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[sum:Total_Salary:qk]</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[ctd:index:qk]</cols>
        <show-full-range>
          <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[Years of Experience (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{584907D2-A744-42CB-8CD2-2FC7ACDD8DF6}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='IT_Survey_DataCleaned' name='federated.0vb1bup1wan1dl1dqx6g91vqe1n4' />
          </datasources>
          <datasource-dependencies datasource='federated.0vb1bup1wan1dl1dqx6g91vqe1n4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Total Salary' datatype='integer' name='[Total_Salary]' role='measure' type='quantitative' />
            <column-instance column='[Total_Salary]' derivation='Avg' name='[avg:Total_Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Total_Salary])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Total_Salary])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Position:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</column>
            <column>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk] / [federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk])</rows>
        <cols>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[avg:Total_Salary:qk]</cols>
      </table>
      <simple-id uuid='{A0CD4F94-D10B-4561-93FF-04AE8790C9A0}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2018</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Age (bin):ok]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Gender:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Year_of_Response:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC24180B-267E-48E5-8340-65A7031FA44C}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='117'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2021</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Year_of_Response:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0CE3C9CC-2635-4C7F-BC0D-1D82F8CA87F0}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Gender:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0FA135B-5341-496A-88A4-F54E97891245}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1216AF05-B66E-43F9-9E1D-B8A15570A856}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C02B10A-DB38-4904-ADAE-2072DC9051EC}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='34'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[cnt:index:qk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Primary_Skillset:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Year_of_Response:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28D2CB96-85E3-406F-B10A-12E42411DC08}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Unemployed_CovidOutbreak:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Year_of_Response:ok]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Year_of_Response:qk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[sum:index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{659553B9-B09C-4EEC-B649-7BBF4EE7E776}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E27116D2-5336-4B50-A3F6-6C5BB22B0B19}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:City:nk]</field>
            <field>[federated.0vb1bup1wan1dl1dqx6g91vqe1n4].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA21ADA9-B1FB-4959-9DDF-1D3B3163DC1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAep0lEQVR4nO2d15Mjx4Hmf1kWrmAK7XuGQzMy1JEn74Jco5MUtxsX93BvF/df7tMZSlpR
      q5M5raRdiZShEYfiTE83Gr5QQKFc3gOGMN1Ak9ONaTQa+YuYiKlEIjthPlRW5ldfCimlRKHY
      UAyAn/70pwwGg1X3RaG4dgyAwWBAv99fdV8UG4yWBkhhIYU293GRDtEwSDR9uX93qa0pFNNI
      yX7nxxQi/5Preb/hoPuvaDIFoDR4ByuJx1UEIfu93y+9i8bSW1QonqClbawUqv138Z37vND6
      MRo2fy2/xkHnTdC2eVD6KnryGPQdRPSA55v/m8C+TyD6IH3u13+OLkMeuP+FWHpYqSTUxPL6
      uLSWFIozFIL3MbDJhR9RHLyDl/sWnmHjBO+iiwpm9BhLJlhxm1Avg7D5a+V7ZMIPycQtdBkS
      G7ucZLfJxwMC3SAzdVZYBkoAimeDlJSHTVqZXfq6iSGybPV+iRs8ZmhuYyRNQrNKiiDSi5hJ
      l5SIO503EcLh46lJKQwko198O4kZ6ssdtKghkOKZ8aj8dySaTcu+g572sOM+zvCYgXnAe5Uy
      GoJYaGAcIPq/4rj4OloaEus5hIxIhcFDp0yKRJBwEOQYLnH4AyCklPKNN954ZrNA1WqVRqPx
      TNpWKK6KGgIpNholAMVGowSg2GiUABQbjRKAYqNRAlBsNEoAio1GCUCx0VxqJTjo9+j2+oRh
      xO5OlVq9hZ3JUs7bHNdbAOwf7KOL5a7aKRTL5lICyOQKmJbF4+M67VYT3TBJ0xTf96hs7ZL2
      WwyGCXf3tykUCiRJsux+KxRL4VICiId9jutd9g/26dRPKFRchq0aQwx0KZFSoglBp9PBMAw6
      nc6y+61QLIVLCcD3PHRDo9VsUXFdTuungM62W+a0XkdoBjuWTpqmpGmKuu1YcVO5lABKW7uU
      po739vbm/n+TiITJtMwNGaOhhH/TUXboJfEX6z5MXfTfCT8kn37CrYCKlaOmQRUbjRKAYqNR
      AlBsNEoAio1GCUCx0SgBKDaaSwkgiULq9VNa7S4SSOKQRrONlCmtRp1Wx1Mz4Iq14FICSKWk
      4lYJ+x6xlLSaLQZBn4HXRtgFZOgzjNJl91WhWDqXWggzTJPm6SlG1iHxuxhZB93vEEURlmOR
      xgZRknC4t02xWNwIK4ToM3PWc5wiZd1eWX8Un45LCcBr1cEuUMrbBP0eYdCj2+lS2Nuh1/OQ
      wxDXMcZ5QM1mc6mdvolIexem3N+e1yVVK8E3nkvaoR3i/gCvF1MqlSkUoVwuY1kmut9D5Lcw
      dXUvgOLmcykBWJksbiY7W2ZZAOTyztV7pVBcE2oaVLHRKAEoNholAMVGowSg2GiUABQbjRKA
      YqNRAlBsNFcKxhoOI7a2ynieTxCE7O66nNbbAOzv76MveTsbhWLZXDkYy87ksS2Lo6Mag15v
      EowVjoKxHMchTW+/MU4MZr1AhYJDWbdW1h/Fp+NSAoiGfU6eBGPJOODopMnewT6B10BKSSol
      hhC02210Xafdbi+73zcOae3NeIF8vwfKC3TjuZQA+l5vHIxlaim6adBqNHHdMvWpYCz5JCVu
      E9ygZ9nU171uXDIYa2cmGGtRSNYmMRgEM0OgRKQzZ4RPgzAzM8+RUQjy9g8fV4kKxloS//en
      vyGdUoD7aoGiaz5VG43Ky0gxmZhz2u9hDVWu6rNECWAFPDYP6GqT82Yx7bAfHVHv9JFCH5fb
      UYK6jH62KAGsCrV3wo1ALYQpNholAMVGowSg2GiUABQbzZWCsZrtLjJNaNRP6Xg+UqY0VTCW
      Yo24ZDAWVNwqUd+j2WxgOxWCXpdet4WmgrEUa8Qlg7EMmqc1jJxDMuyTNXUioTGIYgrZzQzG
      gtbMUbHo4Lq5uTWboQ3x5Ni2bFzHRfTFmXAth4oy1D1TLheM1RwFYxXzGSIR0/Z8hmmCmy3Q
      9TxkuHnBWGfpdj1OjJiBNhGBQOKkHkMzA/okVmYYDmn6TaS9fSZcy0Omvevs9sZxOTt03iEZ
      BPi9hGLJRfpd8lvbZCyDlB6ioIKxAIZahsfWnfGxkCnO8E8r7JHiLJcOxrKmgrHyheL4/yoY
      S7FOqGlQxUajBKDYaJQAFBuNEoBio1F26BvE++9/RDK1fljaGlKYv5SgWBJKADeIDx88Ikom
      x1/I5SGnFsKeJWoIpNhoLhmLMuDxw2O2n78H/S4tf0gSJ+xul6mpYCzFGnEpAZh2FrdSBCkB
      gRAghKDvzwZjPXewszHBWGe9QI5ToFAoQDgpEwIqlQrN0IKpoY5lWVQKFYRoMx2vVSgUqFTy
      z7jfm82VrwGCYUCxVKHfqpMiZoKxWq0WmqZtRDDWWXo9HztjgemOy6SEdrtNaGRBn1zdhmFI
      u98+Zxr0fZ92O7q2Pm8ilxJAGPTp+D5anFLM5fA6LaQwcItlTlUwFrA4GEtKOfdeiYV1N/C9
      u04u6QXKcXj3ufFxvjDx/9z2YKwYnXQqu0eTKcb0eEaxVqhp0KekZu7h6ZNMn1LcYi9+vMIe
      Ka6CEsAKePDBIz5oPxofv1CG/TtqxmwVKAEsIBAZOnp5fCxI2YlrS2m71+vTaEymh7YNC1Cz
      PavgQgHESYquCcQGpphFwqRtTGZwNBkvTQDLIMYgOXMtYk7fZ6n4VFwogFqjw2AY8uKdnY0U
      wVWREpIpc4/G8tZD6sY2HaMyPnaSDgfRowueoZjHXAFIKXn/YY0PH9WplgsMhiG5jH3dfVt7
      6qdNfvj2R+NjQ4PP/03lgmcorpuFZwBD18llLb74uefUr7/i1rJQAIc7Fe7uuXO//FKmtBtN
      Cm4VU0C71SARJm7ZodVsIIwM5ZLztPtDKBTXzlwBCCEwDZ00SQijCE0IDGNSNYki0jghTlPC
      Xhtp5ShlLAZeC812SAdthlGejKnMplelL3IcTSdLIHlp+O4Ke3S7WHwRnIT86Ac/RHeqxH2P
      73/vu5MnWTa2NXqqHwRopuC42SCTs8gVb0cwlkwyMJwca0LDdV3qw1kjm52xcS2XecFYSSKB
      yUZ5Qghc18W2Y6ZdcrZt47ruOTOc4zgUiiWS4fTHJHFdl3Zo05ma9LGehGspno4LZoFShrGk
      mA7pJ7ODmTRNiOMYGcc4+Ry9WMcyNOxMht4tCcbqaQ5Yk3WAVKY0m01CMzsbahUMafbOv75u
      1yNNZ4UvpaTZbDIcDmfKh8MhzWbz3A+F53nksgZYUxfOcvR+BoYNxrShbhSupXg6FgtAs/nO
      375GrdFma2ePkfF5RBJFSNMiCQJyxTKFgY/MbpHNWBjCBxWMpVgTFgsgDXjjBz9ia2eHX/7y
      FxTdXb7/3b/D0ASmnaFiZ8ZVs/nC3P8rFDedxVepEoRh8+KLz2PnS2T1iDhZv7G8QnERi88A
      Rpbv/M03+OjRCV//+tfJWxq2oYY1cZwwjCcXsLGyQq818wUgJY3TYz548CEfPXzIQaTxzS+9
      fM1du5n84e33ePd0cpfWf9i3uPNZZWRbVxYIIOX//eJnbN/7PPmCwysvf+aau6X4JB4+POYv
      7ZPx8V1HcnC4wg6tKfMFoOn8w3/9b7TqNeSgw2///S1e/8aXrrlriovodnucnEyGYsXUhEM1
      AfG0LLwGEELD3d7D3d5by4Ws20Kj0eYHbx2NjzUBn3u9dMEzFE/DXAHEvRq/+sNHpJrFa197
      VZnhVolkJlZGqo9iqcwVgJ5zMYe/4/cPagSdGka+wt996yvjx5M4ova4hnuwj61rhIHPactn
      f6fC6WkDdIOdrS2UbhQ3nflmOM3ga6//JzTrZ/SCGNetzj4uBPmsTSolIGl1eghS/G6bXKk6
      CsaKEnKWfh2vQaG4NIvXAWKf467kH7/3t/zP//V/eOWz98YPabqB9iT2sNOooZkZAq9FbGrY
      mgaaRppKqtXqrTPD2XYETKZBbTuD6z47M5yhC2CyUZ4AXNclYyczbViW/aQfiqfhgoWwAveq
      Fj/+8ZvcffHzMw+FQZ9mu40epVRLJYwkwe+ObBD1+mhqbr+kr7UZ7kEz4afvvz8+tg3BS1/O
      zDGyBXNf37LMcMaZfFXJEzPcMJgpD8PhWr7Pq+bCe4Jf/vI3+AJwNsvMtLPcfeHF8bEQglwu
      hxBweJAbl60zcZLQ70++ZKkhgMziJyjWkvleICmRwy7/8st/Q0rJT37yLzMPCyFm/n1cNgrK
      3cwUCcV6suAMIPntb37Ng7/USPottg6ev9ZOKRTXxXwBCI2vfPvvKW29Q5hINFPN5ihuJxfM
      AvX54/sP+dbXv4TQzWvs0vUigZY+O83rJB1mgv0Vt5bFAhAGMuzxxz/+ESNX5ttfffUau3W9
      nJq7M8eZdAD0V9MZxbVywSyQ4M7dO0RxCppKd1DcThZ/s3WTl7/wCq+++gqd5s3JxFQolsmF
      sSj//ttfE8YpWWc2zk+mKe3mKBhLS2Na7TZoJtVykVargTBsyqWiCsZS3HgWnwEMm+cO9zFN
      kxdfuDfzUBJPgrGklFQqVdKgT/dJMJYM+wyjTdgYT7HuLD4DRH1+/YcHfP873+aNH/2Eg3/8
      z5MnTQVjGaZJs15DZHIQD7GyaxiMdeZ6t1gq0u3HzPh4NKG8QLeQC7xAGcpWzM9//guK7uy+
      X2maEMUxaRyTeF1iLUu5kEXGGh2vu1bBWBIgM/v6up0uXq83Wy9d5OO5WV6g5MxJXSNVQ9EL
      WHhT/KNHj/n2d76PkCmPjo5nHk7iCGHZpMMAO+dgDQL6/T7FUhFH+ojCtgrGWhEf2PdJxORj
      3Q8fUky7K+zRzWbhTfFv/eFP7B8eIoTGW2+/xd07kzuuTStD2ZoYw+wFIVkKxU1nwU3xGi/u
      l/nnf34TjZjtgxfnVlMo1p0F1wCCz7zyVV6IYyQCw1BeIMXt5AIrhMAwb68HSKGADdsm9cg8
      HMWeP6GctNiOTy54huK2s1ECkAjk1NaiUk0QbjwbJYBN4OioRphORF4uBhTVBp8LUQKQo/S1
      afYy67vh9J//9IAgniyo3Xs5z+6OtcIe3WwuJYBoOODxw2O27t3DCH1q7R5Swt5WiZN6G6Rk
      /+AAXVuHIYbk1//69kzJc19UaxmbwqUEYNpZ3EoRgaTj+ezt7dE9PaHT86hs7Y6CscKEe4e7
      N8oLdHpmg7tMxsZ1qsDsGaBYLGIME+Z5gaxP6QVyHIckvX4vkNA6M20UnAKuqwS9iCsPgXRN
      kEhJKsHQNFKZkkqJqYkb5wUKzRzok1XrIBjS9M73zet6DM64WT/2AoXD2VslF3mBPM/jjBXo
      El6gHmeXYD7JCyTP/NFer0ezqW7vXMSlBBAGfbp+HxGnbJVL1Gs1dNOiWHTG2aDFtbmR/vzZ
      SZ5LQrq4/uKqVz3zyaun4d6Mk++N5VICsDI5Du5Otujc35+4KXf39uY9RaG4kahZoA0gFBYt
      ffZegZ34eG7ddZi2WCZKABtAjEHbOC+AmrFL25hEwhSSLofRw+vu3krZKAGkUpIkU5tN3JDZ
      KcXq2CgB/O7f/sxfGpMpzP94YLN7P7vCHilWzUYJYFPx+wPefve9mbLPvrSiztwwbqUAhsKm
      p00WfzRSKknrgmfcbsJhyKNHs2sV8qXyinpzs7iVAghEhvpU3KEho40WwCK8rs9xOLkOqppD
      Djdsz+8rCyBNIprNNpppUykVaDUaYNhUyioY66bz6KjG7x5NVqVfrJq88spm2SauHPrZbTbJ
      liqEgx69bgst40CkgrEU68GVzwDZXJbaaQ2ZQiaOb0QwVhJnZ9LNhTba4M6yQqaNbJlMBrf6
      dGa4mx6Mpc0xwxVsfaYNgKpbJfuozvROgKZlbVy41pUF4Pf7lMsV/FYD3S7QuwHBWD2tBNZk
      N3WZpiMjWzhrCguCgOaTPk7T7XYZRGdCrdYkGOvs3+x5PdLh+cFoo9lgEMy2EYXhjTEuXhdX
      FoC7tUuv51Ha2iGTMTE0FYylWB+uPgskBAWnOD7M5jbrIkqx3qidLxQbza1cB0jThCCYjPdN
      1vceX8Wz5VYK4OSkwU/+9NH4OG8JvvBttfKpOI8aAik2GiUAxUajBKDYaJQAFBvNlS+Ck3DA
      cb2NnclSylucnI6W89cnGEuxyVxZAK1WC90wSJKEvt+jsr36YKyC7zG98522Ci/QioKxnpUX
      yE8N/th3Zsq+UmijrXnuyhKCsXQK5S2CVo2h1NHS1Qdj9XqzXpt0FV4g73Z5gQYiS2RvzZQ1
      m821F8CVrwHKrku7USOQOtVymX6nQZBoZNcmGEuxyVz5DCB0k7291QRjSUaZN9OYMppfWaGY
      w1qvBEsED+z7M2XPDT8AgvlPUCjOsNYCUDwbQmHN7J5j3OKzqhKA4hwfWfeIxWSDxL3wEUm/
      y9vvzUarvPSCRFvzlSQlAMWnIgwjHj08E63yfJl1TxNdc/0qFFdDnQEU5/jrh48Jkskve6Ey
      4LZOaq+1AGQqeev3786Ubd1RN79clQ8+eIg/FZj1wudzlLO3UwJLEYBME4JhRDZrM+j7CN0m
      Yz/7XeallBwd1WbKwl1nQW2F4jxLuQbotJqc1BsMfY/uIKbdrBEl671ErtgMrnwGiMMBkbCw
      zZggGOA426T9mCCK2dvZe6ZmuDiRnDWylYpFEj1i5Wa4NQ7G0rQu09tpFvIFSo4JeDNtuK67
      MP7mg55GlE4e282klKyb96N4ZQF4XY80hW6nS3a7ShiGpFFCLq8/czNcPOcs0+l26Q2SmbKV
      mOHWOBgrTWdjLXt+DyM9fw3QbDYXCqBh3ScyJjYVY3BE0mvPrbtKriyAytYOAPlcjnw+R6vR
      QFg5bFPNsCpuPkubBSoURoFY7tb2sppUrDEnJw0G6eRH0MkPKGcueMKKWOtpUMXN5Z13HtAN
      JkOp3c/mONi3V9ij+ahximKjUQJQbDRqCKS4NiSjPYunMYhXaqdTAlBcG91Q8ObRrEPgH+7G
      WCt0WSgBKK5ERy/haZN4/IwM2IpP59YNw4gPP5xdM0kPS6CvbiSuBKC4EkNh4+tT/qtkve4P
      uLIAouGAVscjSWFnq8JpvYHQDHa2txBLfC96WoFo6i4lOw2wpuwOitXw7jsf8puP/jw+vuea
      3Hl1fTZJuXoukGmzvZ3h5OgIz2uTL1fHwVg5e3mDu7bu4uuTN7YSN3CT8wIQgFh0WXW2WMwr
      HD1fLCPv5sq/AEv4BbnwNS6jH2fepwt9X3PaueA9OtvSszi3XD0WBcnx0RGF8hZy2EUTGgiN
      VEqq1erSzHC//2uXx73u+DhbFVS2XOYZ2WI9YtqENjbDmWfMcAuMbE7RQV9ghrM+pRnOGSfD
      TRnZntoMV3hqM5w4a4YrfGyGmzWyVdwK9qOUT2eGy1MszDPDVcicMLcNXfeAyUJYPp+nVLKB
      7kwblXKZ7Jyr4KHU+c1g1lXw5cwpGS05V/cqXFkA3UaNEJ2B36NcKlCrnwCwX16uGe6DDzw+
      bE5udsndsTnQsufqPbUZrvl0ZrjwU5rhvBUlw8lPaYZrNpsEVzbDtQgGgzP9GLWRJLNt+L5P
      RzsfV9NqtXiU2aKtTyIZ3aROPvEgMyuAdqeNteSEiisLoLS9T2nq+M5h7qpNKjaMRtvnL/7k
      R+uzhYD8NV1G3LhZIGHaiOzUrEKakPZai5+gWHsa9Tbv/HVydth6IcuWafGTX/5qpt7+F7NY
      meVOmd44AbRim+N+ZXxsEvESSgCbhpRyZqPDUVmGd09Dfn80GUKWMhrf/Vz+0n/nxgng0dEp
      P3rnw/FxMaPx0jdLFzxDsUn0himP2pNrwWH+ajONygyn2GiUABQbzY0bAikUl6HVT2aSSPKW
      Rt7+5N/3lQkgRfCQ2XnePZpML6ooFJ+WH/7Z53F3MpX6zeczfPVenkfM7mqzTwMtjcdiWaoA
      0jjk5LQBms7uzg4X7ZEXRgn/9LM/z5T996+oUCvF8hiGMf/089nv2P/4WpFH7Yg33xst4C1V
      AL7XwalsP/ECxeTtUfPDWJJOrXKeXd1UKFbFUgUgpUQTAiFGVrJqtUoul+OjjsQL0rHx6aCk
      s+fovHa/MLJkPSkvFywMM+W1+xpCjGxttiEwTZNXDvPccdMn5bBf1LFt41wbbsEiZ8+2Yelg
      miZfOMyxX0nG5buOjmWZvHa/AIhx21uORZRIXrsvxm0b2qiNlw/y7JTicRs7BR3TNHntvkMq
      JUKMxp3bRQspZ9vQxaiNz+/nqDrWuHwrP2rj2y+N/EPj/pVMhCZ47f6oX0IIxJM2PreXp5yf
      tFHNa5imybdecoiSdNzGXsXE1ASv3xdIJm1blsVndgVO1hy/9kpu1MY3X3QYxum47f2KScYQ
      vH6fmTYytsVLu4JsxgJGr72cHbXxjRccBlEybvvQNclbgtc/M/qefNx2NmPx4o6ObZlP2ta4
      WzEoZLTRZyumkiVyNnelzmvCGH9WOWv0/fji3TwvDeX4e3CnbJC1n3zHnvQXoJS3EZrBa/d1
      hNAQUkr5xhtv0O9f3VqchAHHp00QGvv7u2hCUK1Wx54gheKmsdQzgG5lODw8WGaTCsUz5ZnP
      AlmWRbVaPVeuado51+G8sqct1zQNKeU5Z+XTtPHx6VW1MWlDCPHMPq9nUffTtvHMBRCG4dwh
      0LyhUblcxvM8kiT5xLqLyovFIv1+nziOP7HuovJCoUAYhufs00/TRi6XI03Tc5bjp2kjk8mg
      adq54enTtGFZFpZl0ev1PrHuonLDMMjlcnS73U+su6hc0zSKxSLtdvsT6y4qf5q6i8pd16XV
      ao1/EJZ6DaBQrBsrs0IkcUiz0SROUkAyOHNjxQxS0m238AdDZJrQbjXxB4v3Ag4GPq1OFykl
      Pa9Dvd5gGM2/kyhNIpqNJlGc4HXa1Ot12l1vbl2kxOu06fUDpJR0Oy0GwwU3aEiJ73XH/ZAy
      PZfGPE0UBjSe9COOhjQai/v88XvwcT/arQaNRpO5WzJISb/n0Wp3SGVKq9GgXq/T68/vSxyO
      /nYYJcg0odVsEiXnhxfT7X98dknikGF48Q49A79Hko4+o0az9eSuufkE/R5xIhkO+tTr9Qs/
      8zSO6A8Cgn6Per1OvdmamXqf12cpVygAvz+gWHI4OanR9zxqjcV3jQUDHytboN04JYpjcoUi
      Xqs+dxMOmcQMY0lWRNQ7ffz+ENetYBnzX6rv9ymWHGq1GnmnSKVcpO/PPxuGQR/dztFrN2g3
      TpFmjnb9mGjehyhThGGRETGNjk+33abV7ix8jUkiKZUcaic14iSlVC5xenK8oG5MNu/gdxoM
      w4Aw1qhUygs+TAm6QdaEetOjVKngZAwGw/lf1DhNKZVK1GonnNZq5AsFTo7n9wOg22pQa7ZB
      JrQaDbr+4h+yOBxwfPSQQTza5LxUyHJSmx+hksYhJ0cf4UeSdtfDdV1ymfnZoqM77eq0Wh3s
      bA7XrRAGi/vR73U4OqkTD/3VCcBxHJr1UwrFEjmnSM62FtbN5ArEQQ/NymBZJr12gyAWcxfU
      hG6QzxjUuwGlvI0mJLWTE/wz3vKPKThFWo06+UIRTdPw2i3K1a25da1sHqI+qWZhmQZ+t0Oa
      JgzDOb/Umg5JyHG9TT6XpVRxMS/IvzENndrxY4xMDss0qJ8co1vnb/kEMEyLvteiH0pMTSNN
      Qo6Pj4nnCVFoiDTmuNYgn8+haYKWN6Banu+htwyDeu0xuplB1wTtTpcwmn+WS6IhQaqTM3UQ
      Oq5bXnyPu5S02l0qlZG1XRfw+PFjcoX5q//NZotKpQyAberUT09pduafmYd+FyProAsQQiMe
      +lhZB21eZ2RCtx9RzNkITVudAGrHjym6OxQL8z/kafrdJoPUYG+7ShwnlKs7FDM6wZwhgkxj
      Hp80OTg8wNQFxbJLteLQX3DKr588Jl/eplTMI9OYfgy5BVFlQa+DF8L+7hY5p8zu9haWaWOb
      5+vLNMXK5HnucJfOoiHVpDYpgv3DOyTDPkkKu/uHyDiYm02RxAmlyjaVnIkfpmxtb1OwdYLo
      /FBFyhTDznL3zgFet0sU+Oh2fv6XA0kiYXf/DsQBpeo2W26F7IJf3kHfJ0kiOt3u4qHgE9I0
      IgxjOp0uvZ6H0C3u3H2OvjfnrChjhmFEt+vheR7ZvMPW9hbhgmGy3x8QDny6nkecSJqtHm55
      /j2Vw36PNE3pdrsEsVjdRXCjXiNJwc7m0WWE5w+ws3kq5eK5+Avf6+APhgjNoORk6XR7GJZN
      ueiMp/k+Jo1Dao0WmhA4pTJhv0eUQqVSQZ9zxmg1TokSiZXJUciYxGhkrPkb/A38Lp4fjH7t
      Kg7tVodM3qGQOx98L9OEVqtFKgWlcplep0kQxhSKZZz8WdFLel6XQRCSKziIJMQfDMnkCnPq
      jq4X2h0P3bQpFbK02x2EYc1972Sa0m43iVMolSukYYCRyS2wo4yuF/zBkGy+gKVJOp5PsVTB
      thZPGPq+Ty5jcdpokqZQdqtkFtQPBz7CytHvtgjjBKdUXvh+R4FPauSIA4/+IKRYLmObi/qR
      4vsB+VwGvx+Qz198b7rv++RyWf4/0OjdVPJdyQYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      xahRxULDs04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3Rk2X3f+XmhXuUMFDLQ6Eajc+7pCT0z5HA4DMM4kijLkijLPisdWdax
      ZdFJPpZlW9zdY2qt9a6OtJS19nptrbQyaQ0phhkNydFEdk/uMJ0baIRGLKBQqFyv3nvXf6Az
      UgFVhVTvc86caaBQ710U7vfd3/3dX5CEEAIbmzpFBSB+GSxjnYdiY7P2zAnAMmwB2NQl8noP
      wMZmPbEFYFPX2AKwqWtsAdjUNbYAbOoaWwA2dY0tAJu6xhaATV1jC8CmrrEFYFPX2AKwqWts
      AdjUNbYAbOoaWwA2dY0tAJu6xhaATV1jC8CmrrEFYFPX2AKwqWtsAdjUNbYAbOoaWwA2dY0t
      AJu6xhaATV2jrvcAbLYuQghMCywhuF2AU5JAliUUCSRJWt8BYgvApkpkiyaD00UGp4sMTReJ
      ZwxmsgaZokmxZGFYc5PfIUs4HTJ+l0zYo9IS0uiIONnR6KQj4kSR11YUtgBsVkXJsOifKvL2
      jQwfjuS4ES9QNFZfZ1kCvE6Z3mY3Rzq9HOn00h7War5KSEIIwcSHdm1Qm2URQjCa1PnRpVlO
      9aUZS5aoVWlxRYJtDU4+vjfEE70BfE65JmKwBWCzLJYQnB3O8cL5Gd4dyGBaa3t/r1PmZI+f
      LxyJ0B52VvXatgBsFkUIwaWxPH9yKs7F0XzNnvbl4lAknuwN8DceitIU1KpyTVsANvMQQjCT
      Nfgvp+K8fjWNYa331L8fjybzxSMRnjsaQVMr8+TbArC5DyEEr11N8X+/NkmqYK73cJakK+rk
      7z7VxJ4Wz6qvYQvA5g7pgsnXXxnnzWvpdTd3ykWVJX7mRJTnjkZRlZVvkm0B2AAwlCjyv704
      yuB0cb2Hsioe2e7j73+8Ba9TWdH7bAHYcGYoy+++OEKmuMbunSrT3eDkNz/TTlPAUfZ77Fig
      OkYIwam+NF/97s1NP/kBbkwV+a3nhxiZ0ct+jy2AOkUIwen+DL/30iglc7NY/MszkSrx298e
      YjRZnghsAdQp7w9m+b2/GkWvIHxhoxJPG/yrbw8zmSot+7O2AOqQwekiv/fSKPoWevI/yESq
      xL99YYTMMq5cWwB1Ripv8rUXNv+GtxyuTxb4+ivjWEsc5NkCqCNMS/CHfz3GzRVsEjc7r19L
      892zM4u+bgugThBC8IMLSU71ZdZ7KGvOn5yOMzBVWPA1WwB1Qjxt8P/+OL7ew1gXiobgD14e
      x1hgz7NhEmJKlkVKN0gVSyT1EmndQLcsDMtClWWcioxHVYi6NHwOlbBLQ9kAKXWbAcsS/D9v
      TJLTt77dvxhXJwq8cH6Gzx2O3Pf9dRGAJQTJYomLiRQXE2lupLLczOTJlAyKZQSbOxWZgKbS
      4nHRE/KxNxJgT9hP0OlAtkUxjzPDWU71p9d7GOvON96d5mSPn4jv7knxmoZCjGcLvDoS5/14
      ksszaUpVDLN1KjLdAS8nW6KcbInS7HVV7dqbGdMS/NNvDnJtYmEbuN74wuEwf+eJpjtf11wA
      BcPk3ckZvntjjIuJNIaove9ZlmB/NMizXc2caArjUlcWILWVeKs/zf/yvZH1HsaGwalKfP0X
      dhDxzhk/NTOBiqbFy8OTPN8/ys1Mvla3WRBLwLmpWc5NzdLqdfGlnnY+2t6AU6mdEIQQWLpJ
      fiJLIZ6llC4iShaypuDwO3E1eXE3+ZArTOBYCZYl+PYHiTW732agaAi+f26Gn3+0EajBCiCE
      4OWbcf7s6jCj2Y2z7LZ6XfzN3g6e7ohV/dr5iQzT742Rup7A0hc/eVQ8DoK9URqOt6KFam+i
      9U0W+MqfD2ya2P61IupV+YOf345bk6snACEEA+kcXz/fz/npVJWGWn0ORgP8vYM76PCvPovo
      NkauxPgrAyQvT80tO2UiqTKRw800nexAdtRuVfqDl8d46cJsza6/mflHn2zlid5Adc4BDEvw
      7f4xvvL6uQ09+QHOTaf4h6+f49v9o1gV7Efyk1n6//Q8yYvxFU1+AGFYTL87ysA3LqLP1maV
      zOkm79yov0OvcnnlytyDoWIBzBZLfPWdS/yHCzcorHW9jFWSM0z+6MMb/K/vXmG2uHzE4IPk
      xzMMfOMCerKyyZsbTXPjv12oiQgujuaZyW3snN715MORHMmcUZkA+mez/Mbr53h7YvFYi43M
      m2PTfOWNc9yYzZb9nlKqyOC3LmPmq7NnKs0WGf1BP6LK3rG37af/khRKgnM3c6sTgBCCM/Ek
      v/njDxnLbZyN7moYzRb4Zz/+kIuJ1LKTUFiC0ZdvYGSqG0yWGUiSGUhW7XqWJTg7XL6o65Uz
      Q9nVCeD0eIJ/9dYl0qWtkUecLhn8i1MXeGtiaZdh+sYM6b7auBXHXxnAMqpjQk6kSsTTKzft
      6o0Lo6tYAd6eSPC196+iW5vD3i+Xgmnxtfeu8u7kwuacEIKpd0aplU+xOJ0ndb064hqcLq55
      +cLNyPhsqXwBCCG4nEjzu+9dLSteZzNSMC3+7btXuDozP25GnymQG61tPM3spepEa/bFN7dZ
      upaULYB4Xuer71wia2xtz0LWMPmf373M+AOHeJnB5IrdnSu+91CqKmZQPSW8VEpZAsgbJl97
      /wqJVbgMNyPxvM7vvn//Spcfr9CrIkso7qUrG1slk8JUrqLbWEKUlQy+FvS0RZb/oXVmWQEI
      IfjPlwa5mKivcNpLM2n+6+XBO54hfXbximlqwIN/fzfenra5Tg/3ICkyiseFb2c7sseJd2f7
      kvctVXgmYFqQzG0M50RD0EPI5+Jobwu9HVEObo/hdCj0tEXY3x3j5P4O1jt6fVkBnJma5Xs3
      xtZiLBuO5/tGOTs1ixACsYRpImtz8eX54Um8Pe0oXhcNHz2MuzOGI+zH2RTG1RJF9bnxdLfg
      bIkuei2rVJkJZAlBdgMlvPvdGkIImiM+BNDbESWezOJxqQR9LlyO9c3JWlIA2ZLBH57rY+N8
      nGuLAP7wfD85w0RaovCqPjVL9voIgf3dlBIp/Hu6yA9P4gj6MDJ5hGlRGJ0mPzhBYWyK4tj0
      oteqNFpUCChUyZ26WhRZ4nBPE/liCZ9nro5/yTAZnkzREvVR0A08TgeGaa17oN6S8vvm9RFG
      NlBE53pwM5PnL/pG+Ih38YYMatCLqyWKkSlQSmYQQlCYmMHd3oiwLMxCEXHLbWxmC7haoxRG
      FxaB6i2/ruVCGObdjozrhWkJzlyfWPC1l97pB+CVM4NrOaRFWVQAI5k83+4fXcuxbFie7xvl
      iLdx0deN2SyZe8IpZt+7CkDm8hAA+uTdU95c/+LmpKRIOBsri1Jd4yaLm55F19tvXL+5aYLb
      ak3BtPhOofZRrq6YF9V1/woghMA0DIxSCdMwlg3XkGVp3TeWm4kFV4DxbIGXb9ZnCY3FOG0W
      eNwpES7Wzr4I7moAwDJNxkdGGezrY2piglw2i2WZyLKCx+uloSlGa2cn7du2oTyQ5SZJ4FRl
      ChVupitFkmB/dwyfW+P6SIK2hgAuTeX6SIJY2IsiS5zvn1zXMcICAhBC8K3+0Q3XF2q9KSE4
      FYJnFzZtK0bxOPDvinD1wgXOvfMuqeTCwXHZdJr4+DiXzp7D6/dx4NhxevftRXXMrRyKJOFz
      rr8AhICB8SS7OqJIksSZ6+Ps29aI5lC4NBDnUE/zuo7vNvNMoKxh8sqI/fRfiA/CEmaVuhM+
      iGu3jx+9+F3e+MEPF538D5JNZzj9yit89799g5mpuU21IkPIszHKPZmmIJ3X8bk1ju9qJZUr
      Mjq1sdovzRPAj8emSekb4yBlozFrWQzuDy3pEl0NJbXE6WtvMj6yuuoNiXic73/zm0yMjCBJ
      ErEVdEipFaois7srit/tpFA0iAbcRANzB2P7t8dojngJ+9e/dM19OcFCCP75qQucnbLzSBfj
      WGOI3/A1MPKD/qrEBglZcFW+xiyVf+ZOl4tPPvccPxyQ+bO3pyq+Xj1w3wowVdC5vEAkpM1d
      zk+nkHsjtD7dXfFKIDsVEk2pqkx+gGKhwKsvvkh70C75Wg6S9IAALiZSWzbUuVrolsWZqSSR
      Q81s+9I+tPDqlnF3i5/IJ1sZmOmv6vhmZ2bIDl1gDcsPbVpag9r9Anh3k+b2rjXv3zrY8rYH
      2PHlQzQ93ll2nR9Xo4f2Z3fS/TP7uDZwGdOo/n4r3n+RkNN+kC3H/jbPXTeoEIKLtvlTFhcT
      6TtVqxVNofGRdqLHW8mNpMgOzZKPZymldKyShazJaAEn7hYf3o4g7mYfsiJTLBQYuH69JuPT
      CwWC6hhTtNXk+luFQ533CCBR0OclgdgszHiuQKZkEHLedYnKqoyvK4SvK1TeNW7epKTXLnGl
      TZ6iz7QFsBgeTWZ/m+euCTSUyW8o/+xGxhSCoXRl9U7j4zU6UbtFVEoTctkxEYuxv81D0K3e
      FcBaF7Dd7FT6eWUzy5mbEtsOHKdt5z4UhwPN7UGS5v5cmtuLtEzAjyJKHG6rzaHdVuDJ3gBw
      TyjE+DrV95EkiY/s6KFgGPRNxYln5lIPQ243Xs1JyTJRZZnR2Y11NlHp56UvY/4EGmLMTo4x
      MzGCy+unY89hZuNjZJMJ2nr3MzMxwtTNAYS1cI62ZZo8s8fPq31Fe2V/gAafyoluH3CPAJKF
      9ckjlYBELsf1qTgPd25jZDaJQ1HwaBpNfj8XxsfYHm1gd6yZ82Mj7Gycq+48k8sRdLlBgtMD
      N9Z83IlCZfa7qiwdrmCZJg6nGwC9mCeXTpJNJijmMrf+PY0Qi3t6JFlme8zN/nYP529Wlme8
      1fjEvhBOx9xqescESurrl0jdGQ6zs6GRNwf6CXs8uBwOBhPTXJ6YIKvrXJoYZyafo8kf4P3h
      IXTDQJIkzo3epFgDN2I5zFb4eXn8viVfz8xM4fL5aevdjyTJjPdfIZuawSjpjPVdJpdKslTm
      i+Z0ojmdfPFI5ME05brG5ZD41P67joo7j6HcOk0kgKuTk1yNz4XGzhYKKJJEulhkd1MzxWmD
      glEir+uMp1Mcae9ENw1yuo4lBPkaelKWIleqrDxMtHHxBJvbjFw5v+D3zdLyv3M4GkVVVY52
      eeltdnFl3PbwAXzmYJjgPcGCd/5VWqCF5FpgCXFn8suSRIPXy1uDA5RMk9f67vrJb+8NTg3c
      f3J6ebK23pTFEBVa1m2dnSiKgmnWps5Sa2cHMPeZ/vyjjfz2t4ZrXdZowxN0K3z+gS6Rd0yg
      jZBKZwnBG/19lGo0KTYSbq+X1q7OmlxbUVV27N595+v9bR4e2eGvyb02Ez9zomFeqPgdAWiK
      HTyyElS58s/r8IkTyFW4zoP07tuH23M3t1iWJH7piRgerX7/xrtb3Hxi3/xDyjufiHuDdFJ0
      Oxwc7+jkqZ29RDxeHuro4qmeXloDQY60d/CTh45siF7AnjI/LyEEwiwhjALCKN7ntmxoaqJn
      z57qjsvr5dCJh+adE0R8Dv7OE7G63BA7VYm/91Qz6gLRu3fWg6C2/kkUAPlSiWQ+j1dzkirk
      +WBkmCd29BDPZkjkcsiSVFFro2oRWOLzEqU8xtg5zIkLmMlhRH4GzCJIMjjcyJ4GlIadqK2H
      OfHE40xNTJCYqjx+X1FVTn78aTxe74KvP707yAeDWd68Xl8xX3/rZIzO6MJlKe8IoGGZupVr
      yY3pKcIeD2GPh0Ot7bzef52SaXKwo41L4+PrPTwAoq77T1mFEIjMJPrl71EaPAXGIifFhVnM
      9DjmxIfoF55H8rdwcvdjvPiWg1Jp9a5VRVF49KmPEmvvYjSpky6Y6IbAo8kE3Aohj4pDkfjV
      p5oZThQZStRHAd0newP3uT0f5I4AmjaIAEJuNz0NjQghcDsc5Es6u2NNXBgfI1sskivDBbgW
      tN7TiV6YOvrFv0S//H0wVzY+kR7DlXmeJ6INvBVvJmuu/O8gaW5cOx/hLwaCXDrdRzpvcq9T
      z6FIhD0qBzs8fHxvkK98spXfen6YVGFrOxt6m1z8ykebUJbw8NxJibwQT/CP31zY72wzn3/3
      +AH2RAJYuWkKp7+OOXmp4muWJBeXxGH6pmWMMlYDWVEZklq5zHayonzh7Gp2cazLx39/b5qi
      sf7mZC1oCTr46k900uBb2rS/swJsC3iQpZqXwN8SaIpMh9+DlZ0i/+rXsFLVqaDnEAUOSu+w
      /6M/x0gpxlBfP8lEgmKxiGWaSLKM5nQSCofxxtr5/kiQy9MwryT1MlwZL3BtokBLUGMipbPO
      pUSrToNP5be/0LHs5Id7BOB1qHT5PdxI2XEjy9Hpc+M28+Rf+3dVm/x3ECbyxf+f3ie/wt7D
      P4FRKlHSdUzLQpYkHJrGVA7+zXeGGU2ufs9gCRhJ6rc8I1vnqdcacvBbn+ugpczyNfc5hg9E
      gzUZ1FZjb9iP/sF/xZodrs0NTJ3CqT/EyidRHQ7cXi8+vx+Pz0fBUvjXf1nZ5L8XwxREvCo+
      5+Y/I9jR6OR3vthJa6j8MPD7fuuDDbYAyuFQqQ9j8FRN7yEKsxTP/Nl9tUBNS/B//nCMsdnq
      Bi4msgaPbPezvXFjOEJWw+M7/fzOc500+Ffmzn9gBQjgc2yMA7GNilcW9I7+gLUwG4yhU1iJ
      u7FPb1xL8U6NGmC/eT3Nr32shWf2BjfVYZmmSPziyUZ+/ZlWvM6Vz937BODXHBxtDFdtcFuR
      h6wBtOwadcwRFvql7yCEIKeb/NlbUzWTXb5k8d2zM/zqx5r5jU+2sq1hY68GqiJxuMPDV3+i
      k+eORnGsskbTvKyM53a08vpo7T7ozYyM4BPFM2X//JWJIrN5k93NTsZmDW7OlECCbREHg4kS
      QwmdJ3f62N6wuM1qjJ5FZCZ4bdBZddPnQV6+PMtPPxTlyd4AJ3v8nOpL86enpxhJboyzF5jz
      dx1o9/DlRxvZ2eRaNjV0OeYJoCfoozfk40qyNkvtZqbXLdheLL+ZdaZoMjxToiPsYDprYAnB
      kzu8qIpEV1Tjry5aS05+AKwSxsQFTvf1Vjj68jjdn+a5o1EUWeLxnQGOdfl46UKSb32QIJFd
      35qxnVEnP/twAye6fUsebq2EeQJQZInPdLdw5YNrVbnBVuIzjRLS9Mqeho90ezh9I0dTQCWR
      M3lnKE9Po0aDr/wKzkZikCvjHSsd7qq4NJbnuXu+dmsyXzgS4dMHQrx6JcV3zs4wOL14x8xq
      41AkDrZ7ePZgmKOdXuQqx+0v+Fd4srWBP70yvG6J8huRDp+bR30pyg0eeGsgh8ch4XfKOB0S
      EnN/zKIh0A2BBLgc5bkeZ+Kj5PTlT6vaGv0k0wUURaagGwS9Toq6iUBgWYLulhDpnM7gxOIF
      BkaTOkKIeaaFpso8sy/EU7uDXJ/M88a1NG/dyNSkJ7EsQWfEyaM9fp7sDdAcdNQsAnhBAWiK
      zJd62vj9c301uelm5Es721Gz75YtgIe33Y3Hf3ZfYMGfeXrX0nnBt0mlyzNH2xsDRPxuhidT
      bGsO4XM5KBomDkVGkWX6x2YoLXPsm9ctSqZAUxeecKoisbvFw+4WD794Msa1yTwf3sxxfiTL
      jXiRdMFErNCPJEsQ9qrsbXGzv83DnlYPHWGt6k/7hVh0Hf54Z4wXBse5fk/zt3qlJ+jlqbZG
      zKvrc//l+oIB+NwaXpdGyOfifP8kvR0R8kUDRZZRFJlzfRMc7W1BL5l8cG31EbVCGJilKQx9
      EFMfo02ZprUjyzPtcyvHdFZhLOUknvOT1BspiC50EUI3BIosoSoSHk0m6FaIelVawxpNAY2I
      d32aeix6V4cs87f3buNfnLpQ1x4hVZL4n/Z1o8gSpqOyDo6rxe8PwDLpAtuag5y5Nk5L1EfE
      78Lr0ognc/jcGggIeJzcGE2yqzOKJC1eUMKtyfMSR4QQWEacYvZ99Px5LCMJi3SPjrjm/pvj
      EqAgqxGc3iNoniPISrBiz001WVJ2hxuCPNMZ46Wh9W9mtl58vDPG/uicCSN7G1b8/pFkiR/3
      59jRoBH1KlyZLKIbgs8eWNgsWoiGpma0YQl9icjNvtEZ8kWDZLaAQ5F55/IoBd1AvZXqqhsm
      rVE/718dW7KPcFPgrr19e+LnUz9Cz10EVuMFMueuMfsS+dQraO4DeILPICmBDSGEJQUg3Xr6
      nY3PMpFfu53/RqHZ4+Rv79l2Z0LIwTZQHGCWv/GbSBm4HRJep0xXVCPiVXjx4soyspTwNva2
      uDkzvHigYr44NzktS1C0TIq3yrYY9/R7uBlfvtXrvta5VU5YBfKzP6KQ+TGLPe1XjNDRc++h
      58/hDjyFy/84krS+mYjLuiF8DpVfP9yDVoPk7Y2MU5H59cM78Wt3nxGSK4Qc2rai6xxud/GZ
      /X4ujBWYTBu8dCnDZ/aX//RHVlAad3G0q7wNc6Uc7fJi6GOkJv+IQuYNqjb570WUyM++RHry
      P2Ia69uToqxZfagxxM/tWhs/9Ebhb+3umhccKEkSjo6HVnSdwUSJH17OEPEoXBov4HfJnL1Z
      fmFdOdyNHGjlid4A7hpXddjV7KLVO0R68j9glmqfemrog6Qn/wijeLPm91qMsrfeP9nTxkg2
      Xxf7gc9sa+bz21sWfM3R/QTFC89DqbxJ3N2g0b3cae8SaD1PI0kyEa/MswdC/Pf3yj+JXgmS
      BD95YIzM1PegbGdv5VjmLOn4f8LX+As4nNvW7L63KfuRIksSf/fAdo7HymsAsVk5Hgvxy/u6
      Fz940XxovZ9ck7HIwQ7UjhN3vv7ikQixFYb7lsvxtil6vC+ylpP/NkLkyUz9F8zS2j9cV7Sm
      OhWF3zy+m8NbNG/gWGOI3zy+G8cSRcIkSULb/RnkQGttByPJOI9+GUm9G5UZcKv8+jMtVLuG
      Wcyb4ecPvILE+gW9CStPZur/w7LWtk/Fij9Kt6rwL0/s4dgWWwmOx0L884d2l1UgTHK4cT3y
      K6DWrtGztu+LKLH5RbP2tXn4jU+0olWpWXfYI/MPHjtNwLn+B56mMUlu5rtlHfxVi/saZa+E
      gmHy++f6+Oub8RoNbW2QgI93xPjVg9vRJJmSbpJN6mRTOqWiiXWrvojDKeP2afjCTpxuBVmR
      Kd18l8KpP1iRW7Qc1O4nkQ99mfHpNGMT08zMZjBME1mW8Hs9tMQijORd/PEb02SKq/fSbIs6
      +ftPjBDme1UcfaXI+Bp+Ac29a03utmoBwFyvrD+/epM/vTq0KatJKJLEz/V28DF/mIm+FImx
      LKnpwp1Jvxhuv4NIi5eW7QGiylVK7/3x4oWwVoAAZkLHOCc/xLmrw2SXCEbUHCq+SCMXc41M
      lzxzu9gyUWWJzx4K89PHvZQSv49lbqzuO4qjmUDTryFJtc9OrEgAMHda+H48yb8/c53pCrum
      rCVRh4Pn3FFCowbpxOoP+RxOhbbmNC35v8Btrb5CRFE4eS29kw9SzZgrfJqUnFGkxl5upmWy
      S0SNhj0Kj/b4+ezBMK0hjUL6dfKzL6x6zNUgVzBxO+V5p8K+6M+ieQ7U/P4VC+A2iYLOH1+4
      wWsjGzybTMBuXeNk2o2aq94hjywZdHjO0OV5G1WsJJlIIuvv5c9vNDORW31AmNft4pNPP4bi
      a2BgqkAia2BYAk2RaQo46Im56Ig475wlCGEwO/a/Y5mLu1XPXUlxcNcKDu0eYDZdwqHKeNx3
      n+T3XtOyBK+9M81HTkTnCUDVuvDHfvlOY8BaUbUQvIhL458c7eWJ1gb+44UBxjZgLkGj4uBE
      3EFbRkaq8gmnJVQGs8eJc5T9u6YIiYuY8SuIwgLmhSQj+5tRWg5hxo7wvTeGmMhVlmeczRf4
      yxde5Sc+fZLnju5Y9ueN4sCSkx9gaDSHx6VwfSjLzi4v00md1pgLvWQxOJrHtARtMRfDY3kO
      7ApwuX9O+AGfyvBYnt5tPmJRje+/NoFDlTm0O8D3Xp3A61bY0ellNF6gNbZwWqOhD2MZCRTH
      yuOvVkJVY1AlSeKxlihHGkP8YGiCb14fYWoDmEUxt5On/GEilwpY2dr6uXNZmXfONLH3kYNs
      /2wIiims7BQYBZBkJM2L7IuBw4Mp4BvffoW+weok2RumyfMvvkkk6KezLbbozwkh0HMflnXN
      2UwJVZHoH87NtaQqmOzbGUAvZbk5XqCzxY1emvu+LEt85KEoP3gzztOPNjI8lkcvCRrCGg8d
      CHH+SpoDO/3s6JyrXn19MMuTx6OL3NlCz1/A7fjISj+GFVGT9cWtKnx+eyv/11NH+JX93TR7
      1qfCQIfPzS/v7+Z3enfSeL72k/82whJc+PE4F09PIXmiqLHdqK2HUVsOokR3IDn9SLLCO2ev
      cun6UFXvXTJM/vy7r1IoLv3gKRWvL/paJmfwV69P0hhxMhYvIssgy9AWc5FMGeQKJrmCiarM
      xfe7nDLxhE4qXeLVd6bxuBVcmowkz3nZrg1k+cGbcXq6vOSLFn1DWUqGhSJLSya9GMX+RV+r
      FlXbAyyFJQTvTc7w8s04700myZRqdy+PqnA8FuYTnTEONYSYnchx6i9vYJTWpwBmz5FG9j7W
      PG+Zn01n+T/+07eWnair5cmHD/Cpjxxf8DXLypMc+Tc1ue+DmJbg9Xen+eiJ+02Zy/1pAj4H
      rbHFz1Ik2UOo5Z8iybVr+L0maTiyJPFQU4TjsTB50+KDeJL3Jmf4cDrFRK5AqQIfqiZLxDwu
      DkQDHIuFbxX3UpEkiexskbdfGFy3yQ9w/YM4bp+D7YfunwCnP7hcs8kP8PaZK5w8vg+/1z3v
      NVNfux4LsgSPH43M+35PpxdlmcM8YRWwrDSKvJiZVDlrmocmSRIeVeFkS5STLVEsIYjniwyn
      8wymc4xm80zkiswUdXKGSdG0MCyBKks4ZAm/w0HEpdHo1mjzuenye+j0e4i4NJQHnrCmYfHe
      S8MUc+tbygPg4qkxgjE30ZY529cwTc5fqm1z70JR5+K1QR4+vHvea5a5fF5AtZAkCXWB/GJV
      Lcf6trDMNIq6RQTwILIk0eRx0eRxcbypehXphBBce2+SmYmNUenaNARn//omTznw0UMAAA25
      SURBVH6pB9WhMDI+TWK29m2KLl0bWlAAwlo+7MEwLF5/L0HfcJaPnmigp3PhtkvlMDFdpPGe
      JPdcweTqjQyH9ywfUyZqHBu0rgKoFbmUzvUPNlaIRjpRpP/sFDuPxRgcWZvexsNjcSzLmteJ
      UojlV0VVlXniWIRC0aI56uT196bxuVVyBZPppE6pZHFwd/COLa+XLCTg2L4gL5+eorvdw8Bo
      HqcmE/SpyJKPl96M41Bl9uzw8erb07Q1uWiMLOMgEbU1X7dcmpcQgqvvTmJuwM4n196PoxdM
      Esmln/4dXV0EQ3MrYue2bhyaxvaeHjRtZZvBol4inZ3/BJWklT33fF6VbNZkakYnHHTw0IEQ
      saiTC9dSuDSFmVmdjmYX+aLJlRsZju0PcXRfCLdT5tknY5jmXD+CA70B9uzw4XEpHNoTWH7y
      w1xjwRqy5QSQndW5eTW53sNYEEO3GLyQIL9EfnXvnj3MJBIUiwWczrkJsvfAAQYHBuYy0jSN
      xticj9/n9xMILm5GCAGF4vxAPUmevzFeEEkicKuCXWfrrfcIOPXBDMWSxdF9IQxT0NnqQS8J
      VEWio8XN2cspzlyapSGsIUkSPo+CBLz3YZKb43k6W91MJXTiZYSgyHJtK3FsORNo+PLMssFs
      68nw5RmsJcxpVXWQSc+tEB3btpGYnkJzapiGgSxJ7Ny1m2A4DJJEW0cniixz+cKHZLML2fVi
      wfonslrefktVJE4ejSCEYGAkx2NHIkwmijx+LELsVtvRzpa7Yrod4tDWdL/Aju0PkUjqPHw4
      zN5bHet/6lPl5FMoSEptc6G3lACEEIxc25hP/9tkkkV0Y/EDOdM08Pn8mKaBU3OSzWTw+fwo
      ioosy1y7eoVQKER8cpJ8Locsy4tM/jkPjHuB7p+KurLwAkmSePYjTQCEAqvLSIuENCIr6NwC
      IMkuZNm/qvuVy5YygdKJItnU+odeLIeZXtz/feXiRcLRCJGGBrLZLEIILpw7S1d3NwIo6Trx
      ybnUwUw6TWp28VBmt9OJzzPf3JFkL7Iy3ze/UixLMHOrNmgqYzA8lkcIQTJVon84W3Fii+Jo
      qekhGGyxFWBmIldx45ZIVwxVUylmC1iGSXpylkBzmMzULM17OrEMk6n+MYzi6s8X3GJpG3x4
      cBCf3082MxdcViqV6L++8mrdXe2xBUMNJEnC4dpJMfvWiq95GyEEZy6nuDme57NPNfHSm5O0
      xlwUiiazGQNVkXj/4izH9q0+c9Dh7F71e8tlS60AycnK/f6KQ2Hy2ijuoBeXf24D5g56kGWZ
      YibP9MAEwZbKnp5+h4+gb2m/eiadrvgJ2tvdvuhrDvf884GVIEkSR/cG8XtUDEMQ8Koc7A0w
      Mllgz3Yf14eydLdXtoF1uPdW9P5y2DICEEKQmam8ep3DrRHb2UpmKoXDrdHY00Kgae4pFmwO
      E+5oZObmdIWDhf07avt083lc7N/VtejrDtdOZLVyMwjmNssF3WIyUSQccPCdVyb4/FPNRMps
      VbrgNZ3dKI7FI1qrxZYRAAKK+crDHvRMgclro2TisxSzBeLXx0iOJhBAcmSayasjWEtsYssa
      qgUHd27H66ldUv2jR/ficS8RaCYpOL0rK/J1L0II3jo3Q0G3GBrLc3BXgHhCZ1+Pn0jAwZvv
      J5isoJGG0/twzZNhYI2iQdcCy7T40Z9cJZfe+JtggEc/381QcoznX3yz6hl0jZEgv/oLn8Op
      Le2xscwcs+P/HmHVPixjJShqjEDzP1gTAWydFYDy6uhvFIQQHN3fw5H9PVW9rsup8Tc+95Fl
      Jz+ArHhwB56q6v0rR8Id+tSaTH7YSl4gSUKuUq2ctUB1KMiyzOefeZRsrsCV/srrYzo1Bz/1
      6ccJ+zxMT0xRyBUo6SVMcy5OR1ZkHE4Nt8eF1+9Fczlx+h5Gz53D0Acqvn810DyHcLjWpiQK
      bKEVQJLA6a5cz6qm0n6oG83jxBXw0LK3k+i2W4dAbVEaexauGboSJAkcrrlEcc2h8lPPPkF7
      S2W5rz6Pi889eQyXYTB4dYD4aJx0Mj0ngqKOXtQp5AqkZ1JMjkxy4/INBq7cIDk9iyf8k0jy
      6qM9q4WsRvCEPrdmT3/YUgKQcPsrPzQxSgap8RkkRSbYGmH88jCaR0NxqDh9rnmRlatBViRc
      nrti9Xpc/NLf/DQfe+wwmmNlIpYliR2tjTz70D48EugrSLIp5otMDI8zeC0J6rOwjrX6JcmF
      L/plZGVtu/BsHRMICERdjFTa3VXcc5Z2z56iZV8nZsnA1xBg8tpoRfsNb9CJ5rr/o3eoKk+f
      PMzR/T28deYy5y8PMJte/DTV63bRu72NbQ2hOxlwq6Wkl5gYdeP1nsTjehVJWtu9lCS58DX8
      HKrWvKb3hS3kBQKYHs3yxl9U1tlS8ziJ9bZhFEvMjiUItUYp5gokBiaRFJlwW5TEUGW5Bp17
      whx5eul+C5YlmJyaYXwqSSKZolQy0BwOfF4XzY0RYtEgE0Nj5DLVTfpxOW/i97+xZoVyJdmH
      r+Fn1+TUd8H7byUBmIbFS//5Enph7Ut8r4Tjn+ykbefqQwQsy2Lkxk2yqdoUtPX6Uvi9ry1b
      N6hSFK0dX/RnapryuBxbZg8AoKgyzd2rr2S2FmguhYb21Yf4CiGYHp+q2eQHyGYCmMrP4vQ+
      TE2miOTAFfgYgcZfWtfJD1tMAABdeyOssE/zmtKyPViRt6qQKzA9WWEoRhlMjadxeJ8lEPsV
      HK6dVOdDVdA8Bwk2/dpcp8gaR3qWw5baBAOEmjxEmj0kxjZGQvy9SBJsP7x6d6cQgvhYvOKI
      17LuZQnio3Fat7Xja/hFLGOKQuZtSvkLWOZKci4kZDWC5j6A03sMWZ1fB3Q92XICkGWJ3uMx
      Tn9nYL2HMo/23hD+8Oqr5OWzeXLptWtkkZlNoxd1nC4niiOGN/xZROhTmPoohj6MoY9iGQks
      K42wdJAkJMmBrARR1AYUrRlV24biaFxxHvJasTFHVSGxTj+tO4KM9m2cuvcOp8Luh+dXiFsJ
      qcTSv49eKt36v4FL01BvdbvJF4qoqkK+UEQwt5KE/MvvQ4QQzCZmibXejcqUJBXV2Ynq7Fz1
      77GR2JICkCSJ/U+0MD2arUqEaDXY80gznsDqbV7Lssikli67PhafRgi43D/AUw8f5eyFa7Q0
      NvD+xStIksSe7dtQFBlZlikZBqMTccLBAJ0tTYteMzubQbQ0biizpZpsuU3wbdw+jcMfa691
      VY2yaO8NsW1fZbH3Jb2EsUxNVSEEL7x2ioO7erhw7QadLc1c7LtBa6yB4/t247i1IgyNjnPj
      5hjNjVFu3Bxb8lBPL+qYFYZ/b2Q2wPSoHc3dAfY91rKuXqFIi4dDT7UhLVEFuRz0wvKx9ZIk
      8YnHT3Dm0jUsIbi9W1YVBd0w7ts7q4qM3+tBWablpBBiReEVm40taQLdy/ZDDZSKJlffnVyo
      QkhNCTa6OfHpLlRH5b2ulnv6A0RDQSQJAl4PTqfGtYFh9u7opiEc5INL19jd3YmiKLidThRF
      RnM46O1a+kS63HtvVrbUSfBiCCHoPzvFhR+P1brS3h1inT6OfaILzVWdRm/TE9PER9e+kTRA
      S1crwcjW7A295VcAmDMNth9qINDg5oMfDpPPVLet6X33kiV6jjSw++HmJZs/rJRqXmulbNUN
      MGzxPcC9SJJEY7uPJ3+6h8494ZpsjgNRF499oZs9j1R38gMo6sqfVYWizuvvnuXDq/2kszlO
      nfmQkcmVB/KpZTQP36zUxQpwLy6Pg8Mfa6f7YANX35lg7Eaq4pNVX9jJzmMx2nYGl91UrhbN
      tXIX6sDoGD1d7bQ0Rkllsjy0fzcvvH6atlhj+ReRQC0jvXKzUncCgLnVINTo5qFPd5FJFhm5
      Nsvo9VkyyULZewSXRyXa5qVzT4SGNl/N0zE1p4aqqhhG+Xu1hnCIS30DvH/xCp96/GFeeecM
      DocDIUTZZo1D03DYAtiaSJKEP+xi9wkXvcdjFDIlkvE8qekCuZSOnjcwTQuQ0FwKLq8DX9hJ
      qNGNP+KsinenXGRZxuP3kJopv7tLvlBkz/YuTp+9wNjUNMf27eKN986tSAC+gHdL7wHqwgu0
      VcimswyvoKukaZpcGRimozmGosj0DY3Q0RwjFCi/4Oy2Xd24ali/aL2xBbCJEEIweHWAwho1
      IfcGfLRvb9/SK0DdeIG2ApIk0dha+3KBt2ls3boxQLexBbDJ8Pq9hKKrT6csl2hTA07X+jQ4
      X0tsAWxCYm0x3Av0/60WvoCPaPPGSlypFbYANiGyotDW3YZzge4vleLxe2npaq1K/aPNQH38
      llsQ1eGgs6cLX7B6PbT8IT/t29tRtvDJ74PYXqBNjhCCmXiCqfEpLHN1kX6qqtLQ2kgwEqwL
      s+debAFsEUp6icTkNKmZVNkJLIqqEG4IE2oMo64i1mgrYAtgi2GaJrl0lmw6RzFfwCgZd1YG
      WZFxaA5cHhcenweP31s3tv5i2ALYwggh5tIdbwX7SZIE0tYOb14p9bnu1QmSJNmTfRnqe/2z
      qXtsAdjUNbYAbOoaWwA2dY0tAJu6xhaATV1jC8CmrrEFYFPX2AKwqWtsAdjUNbYAbOoaWwA2
      dY0tAJu6xhaATV1jC8CmrrEFYFPX2AKwqWtsAdjUNbYAbOoaWwA2dY0tAJu6xhaATV1jC8Cm
      rvkf6hQtF6/b11EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      9chr1///tpODMqxQKssAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
